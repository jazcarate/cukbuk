{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Burger.svelte",
    "../../Drawer.svelte",
    "../../NumberInput.svelte",
    "../../Recipe.svelte",
    "../../Edit.svelte",
    "../../Parsed.svelte",
    "../../Recipe.svelte",
    "../../Step.svelte",
    "../../Timer.svelte",
    "../../Toast.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import Router, { routes } from \"svelte-hash-router\";\nimport { _ } from \"svelte-i18n\";\nimport Toast from \"./Toast.svelte\";\nimport Drawer from \"./Drawer.svelte\";\nimport Burger from \"./Burger.svelte\";\nlet opened = false;\nlet pinned = false;\nlet y = 0;\nlet lastY = y;\n$: {\n    const scrolledPxs = lastY - y;\n    pinned = opened || scrolledPxs >= 0;\n    lastY = y;\n}\n</script>\n\n<svelte:window bind:scrollY={y} />\n\n<nav class={y == 0 ? \"\" : \"shadow\"} style={`top: ${pinned ? \"0\" : \"-80px\"}`}>\n\t<span class=\"clickable\" on:click={() => (opened = !opened)}>\n\t\t<Burger />\n\t</span>\n\t<a style=\"flex: 1\" href={$routes[\"/\"].$$stringify()}>Cukb.uk</a>\n\t<a href={$routes[\"/r/*\"].$$stringify({ _: \"\" })}>➕</a>\n</nav>\n\n<main on:click={() => (opened = false)}>\n\t<Router />\n</main>\n\n<Drawer bind:opened />\n<Toast />\n\n<style>\n\t.clickable {\n\t\tcursor: pointer;\n\t}\n\n\tnav {\n\t\theight: var(--header-height);\n\t\tposition: fixed;\n\t\twidth: 100%;\n\t\tbackground-color: var(--color-background-input);\n\t\ttransition: all 0.3s linear;\n\t\tz-index: 2;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\n\t\tcolor: var(--color-secondary);\n\t}\n\tnav a {\n\t\ttext-decoration: none;\n\t}\n\n\t.shadow {\n\t\tbox-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.25);\n\t}\n\n\tmain {\n\t\tpadding-top: var(--header-height);\n\t\ttransition: left 0.5s;\n\t\tposition: relative;\n\t\toverflow-y: hidden;\n\t}\n</style>\n",
    "<script lang=\"ts\">export let color;\n</script>\n\n<svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"fas\"\n    data-icon=\"bars\"\n    class=\"svg-inline--fa fa-bars fa-w-14\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 448 512\"\n    ><path\n        fill={color}\n        d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n    /></svg\n>\n\n<style>\n    svg {\n        width: 1em;\n        height: 1em;\n    }\n</style>\n",
    "<script lang=\"ts\">import { routes } from \"svelte-hash-router\";\nimport { _ } from \"svelte-i18n\";\nexport let opened;\nimport { units } from \"./lib/units\";\nimport { volumeFamily, weightFamily, temperatureFamily, } from \"./myRecipeStore\";\nfunction changeWeight(ev) {\n    weightFamily.set(ev.currentTarget.value);\n}\nfunction changeVolume(ev) {\n    volumeFamily.set(ev.currentTarget.value);\n}\nfunction changeTemperature(ev) {\n    temperatureFamily.set(ev.currentTarget.value);\n}\n</script>\n\n<main style={`width: ${opened ? 250 : 0}px`}>\n    <div class=\"wrap\">\n        <h1>Navigation</h1>\n        <ul>\n            <li>\n                <a\n                    on:click={() => (opened = false)}\n                    href={$routes[\"/\"].$$stringify()}>{$_(\"nav.favorites\")}</a\n                >\n            </li>\n            <li>\n                <a\n                    on:click={() => (opened = false)}\n                    href={$routes[\"/about\"].$$stringify()}>{$_(\"nav.about\")}</a\n                >\n            </li>\n            <li>\n                <a\n                    on:click={() => (opened = false)}\n                    href={$routes[\"/r/*\"].$$stringify({ _: \"\" })}\n                    >{$_(\"nav.new\")}</a\n                >\n            </li>\n        </ul>\n\n        <h1>{$_(\"nav.preferences\")}</h1>\n        <div class=\"option\">\n            {$_(\"recipe.weight\")}<br />\n            <select on:change={changeWeight}>\n                {#each Object.keys(units.weight.families) as family}\n                    <option value={family} selected={$weightFamily == family}\n                        >{units.weight.families[family]\n                            .map(({ name }) =>\n                                $_(\"units.\" + name, { default: name })\n                            )\n                            .join(\", \")}</option\n                    >\n                {/each}\n            </select>\n        </div>\n\n        <div class=\"option\">\n            {$_(\"recipe.volume\")}<br />\n            <select on:change={changeVolume}>\n                {#each Object.keys(units.volume.families) as family}\n                    <option value={family} selected={$volumeFamily == family}\n                        >{units.volume.families[family]\n                            .map(({ name }) =>\n                                $_(\"units.\" + name, { default: name })\n                            )\n                            .join(\", \")}</option\n                    >\n                {/each}\n            </select>\n        </div>\n        <div class=\"option\">\n            {$_(\"recipe.temperature\")}<br />\n            <select on:change={changeTemperature}>\n                {#each Object.keys(units.temperature.families) as family}\n                    <option\n                        value={family}\n                        selected={$temperatureFamily == family}\n                        >{units.temperature.families[family]\n                            .map(({ name }) =>\n                                $_(\"units.\" + name, { default: name })\n                            )\n                            .join(\", \")}</option\n                    >\n                {/each}\n            </select>\n        </div>\n    </div>\n</main>\n\n<style>\n    .wrap {\n        margin: 0 1em;\n    }\n    select {\n        cursor: pointer;\n        border-radius: 0;\n        appearance: none;\n        border: none;\n        padding: 0 1em 0 0;\n        margin: 0;\n        border-radius: 5px;\n        font-family: inherit;\n        font-size: inherit;\n        cursor: inherit;\n        line-height: inherit;\n        background-color: var(--color-background-input-sidebar);\n        border-bottom: 2px solid var(--color-primary);\n        color: var(--color-primary);\n    }\n\n    main {\n        height: 100%;\n        width: 0;\n        position: fixed;\n        z-index: 1;\n        top: 0;\n        left: 0;\n        background-color: var(--color-background-sidebar);\n        color: var(--color-sidebar);\n        overflow-x: hidden;\n        transition: width 0.5s;\n        box-shadow: 4px 0 4px rgba(0, 0, 0, 0.25);\n    }\n\n    .option {\n        white-space: pre;\n        padding: 8px;\n    }\n</style>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from \"svelte\";\nexport let value;\nexport let edit = true;\nconst dispatch = createEventDispatcher();\nlet intermediateValue;\n$: intermediateValue = round(value).toString();\nfunction round(x) {\n    return Math.round(x * 100) / 100;\n}\nfunction input() {\n    const candidate = parseFloat(intermediateValue);\n    if (!isNaN(candidate)) {\n        // Very important that the dispatch gets send before the update to the value\n        dispatch(\"input\", candidate);\n        value = candidate;\n    }\n}\n</script>\n\n{#if edit}\n    <input\n        bind:value={intermediateValue}\n        on:input={input}\n        type=\"number\"\n        step=\"any\"\n        min=\"0\"\n        style=\"width: {Math.max(\n            3,\n            (intermediateValue || '').toString().length\n        ) + 'em'}\"\n    />\n{:else}\n    <span>{intermediateValue}</span>\n{/if}\n\n<style>\n    input {\n        -moz-appearance: textfield;\n        border-radius: 5px;\n        background-color: var(--color-background-input);\n        border: none;\n        border-bottom: 2px solid var(--color-primary);\n        text-align: center;\n        transition: width 0.4s ease-out;\n        color: var(--color-primary);\n    }\n</style>\n",
    "<script lang=\"ts\">import { params } from \"svelte-hash-router\";\nimport Recipe from \"../Recipe/Recipe.svelte\";\nimport { getRecipeFromHash } from \"../lib/recipe\";\nlet promise = getRecipeFromHash($params._);\n</script>\n\n<main>\n    {#await promise}\n        <p>...</p>\n    {:then text}\n        <Recipe {text} />\n    {/await}\n</main>\n\n<style>\n    main {\n        margin: 0 auto;\n        padding: 1em;\n        position: relative;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: 640px;\n        }\n    }\n</style>\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\nimport { _ } from \"svelte-i18n\";\nimport { setTitle } from \"../lib/title\";\nexport let text;\nonMount(() => {\n    setTitle($_(\"title.edit\"));\n});\n</script>\n\n<main>\n    <textarea bind:value={text} />\n</main>\n\n<style>\n    textarea {\n        width: 100%;\n        height: 80vh;\n    }\n</style>\n",
    "<script lang=\"ts\">import { _ } from \"svelte-i18n\";\nimport { onMount } from \"svelte\";\nimport { isIngredient } from \"../lib/parser\";\n;\nimport { checkFav, toggleFav } from \"../lib/fav\";\nimport { setTitle } from \"../lib/title\";\nimport Line from \"../Line.svelte\";\nimport ScalableVector from \"../ScalableVector.svelte\";\nimport { scale } from \"../myRecipeStore\";\nimport Step from \"../Step.svelte\";\nexport let recipe;\nconst ingredients = recipe.lines\n    .map(({ value }) => (Array.isArray(value) ? value : []))\n    .reduce((acc, val) => acc.concat(val), [])\n    .filter(isIngredient);\nlet isFav = checkFav(recipe.title);\nfunction fav() {\n    toggleFav(recipe.title, location.toString());\n    isFav = !isFav;\n}\nonMount(() => {\n    setTitle(recipe.title);\n});\n</script>\n\n<main>\n    <h1>\n        {recipe.title}\n        <span on:click={fav} class=\"clickable\">\n            {#if isFav}🌟{:else}⭐{/if}\n        </span>\n    </h1>\n    <section>\n        <h2>{$_(\"recipe.ingredients\")}</h2>\n        {#each ingredients as ingredient}\n            <Step>\n                {#if ingredient.value}\n                    <ScalableVector vector={ingredient.value} />\n                {/if}\n                {ingredient.name}\n            </Step>\n        {/each}\n    </section>\n    <section>\n        <h2>{$_(\"recipe.procedure\")}</h2>\n        {#each recipe.lines as line}\n            <Line {line} />\n        {/each}\n    </section>\n\n    <div>\n        <span on:click={() => scale.set(1)}>{$_(\"recipe.scale\")}</span>\n        <ScalableVector vector={{ value: 1, unit: null }} />\n    </div>\n</main>\n\n<style>\n    h1 {\n        line-height: 1.14em;\n        font-size: 2.63rem;\n        font-weight: 600;\n    }\n\n    .clickable {\n        cursor: pointer;\n    }\n</style>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { routes } from \"svelte-hash-router\";\nimport { _ } from \"svelte-i18n\";\nimport { encode } from \"../lib/lzma\";\nimport { pushToast } from \"../toastStore\";\nimport Doable from \"./Doable.svelte\";\nimport Edit from \"./Edit.svelte\";\nexport let text;\nlet edditingP = Promise.resolve(false);\nlet recipeRoute = $routes[\"/r/*\"];\nfunction switchMode(mode) {\n    edditingP = encode(text)\n        .then((newKey) => history.pushState(null, null, recipeRoute.$$stringify({ _: newKey })))\n        .then(() => mode);\n}\nfunction copy() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield navigator.clipboard.writeText(location.toString());\n        pushToast($_(\"recipe.copied\"));\n    });\n}\nfunction share() {\n    const shareData = {\n        title: \"Cukb.uk\",\n        url: location.toString(),\n    };\n    navigator.share(shareData);\n}\nlet isMobile = typeof window.orientation !== \"undefined\" ||\n    navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n</script>\n\n<main>\n    {#await edditingP}\n        <p>{$_(\"loading\")}...</p>\n    {:then edditing}\n        {#if edditing}\n            <Edit bind:text />\n        {:else}\n            <Doable bind:text />\n        {/if}\n\n        <span on:click={() => switchMode(!edditing)}>\n            {#if edditing}{$_(\"recipe.ok\")}{:else}{$_(\"recipe.edit\")}{/if}\n        </span>\n        <span on:click={copy}>{$_(\"recipe.link\")}</span>\n        {#if isMobile}\n            <span on:click={share}>{$_(\"recipe.share\")}</span>\n        {/if}\n    {/await}\n</main>\n\n<style>\n    span {\n        cursor: pointer;\n    }\n</style>\n",
    "<script lang=\"ts\">let checked = false;\n</script>\n\n<ol>\n    <label\n        ><li>\n            <input type=\"checkbox\" bind:checked />\n            <span class:checked><slot /></span>\n        </li></label\n    >\n</ol>\n\n<style>\n    .checked {\n        text-decoration: line-through;\n    }\n\n    ol {\n        list-style-type: none;\n        padding: 0;\n    }\n</style>\n",
    "<script lang=\"ts\">import { _ } from \"svelte-i18n\";\nimport { notify, request } from \"./lib/notifications\";\nimport { end } from \"./lib/time\";\n;\nexport let value;\nlet done = false;\nlet endDate;\nlet remaining;\nlet interval;\nfunction round(x) {\n    return x.toFixed(0).padStart(2, \"0\");\n}\nfunction start() {\n    request();\n    endDate = end(value);\n    remaining = value;\n    interval = setInterval(() => {\n        let diff = (endDate.getTime() - Date.now()) / 1000; // Seconds\n        if (diff <= 0) {\n            notifyy();\n            done = true;\n            stop();\n        }\n        else {\n            const hours = Math.floor(diff / 3600);\n            diff -= hours * 3600;\n            const minutes = Math.floor(diff / 60) % 60;\n            diff -= minutes * 60;\n            const seconds = diff;\n            remaining = { hours, minutes, seconds };\n        }\n    }, 1000);\n}\nfunction notifyy() {\n    notify(\"Cukbuk :: \" + $_(\"timer.title\"), $_(\"timer.end\"));\n}\nfunction stop() {\n    endDate = null;\n    clearInterval(interval);\n}\n</script>\n\n{#if endDate}\n    <span on:click|stopPropagation={stop}>\n        ⏹ {round(remaining.hours)}:{round(remaining.minutes)}:{round(\n            remaining.seconds\n        )}\n    </span>\n{:else}\n    <span on:click|stopPropagation={start}>\n        {#if done}✅{:else}▶{/if}\n        {round(value.hours)}:{round(value.minutes)}:{round(value.seconds)}\n    </span>\n{/if}\n\n<style>\n    span {\n        cursor: pointer;\n    }\n</style>\n",
    "<script>\n    import { fade, fly } from \"svelte/transition\";\n    import { backOut } from \"svelte/easing\";\n    import { toasts } from \"./toastStore\";\n</script>\n\n<div class=\"toast-wrapper\">\n    {#each $toasts as toast (toast._id)}\n        <div\n            class=\"toast-item\"\n            in:fly={{\n                delay: 0,\n                duration: 300,\n                x: 0,\n                y: 50,\n                opacity: 0.1,\n                easing: backOut,\n            }}\n            out:fade={{ duration: 500, opacity: 0 }}\n        >\n            {toast.msg}\n        </div>\n    {/each}\n</div>\n\n<style>\n    .toast-wrapper {\n        position: fixed;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        text-align: center;\n        z-index: 9999;\n    }\n    .toast-item {\n        border-radius: 4px;\n        padding: 12px 10px;\n        margin: 10px auto;\n        max-width: 400px;\n        background: rgba(0, 0, 0, 0.7);\n        color: #fff;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}